{"version":3,"sources":["components/Nav.js","axios.js","Requests.js","components/Banner.js","components/Row.js","screens/HomeScreen.js","firebase.js","components/SignUpScreen.js","screens/LoginScreen.js","features/userSlice.js","screens/ProfileScreen.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Nav","useState","show","handleShow","history","useHistory","transitionNavBar","window","scrollY","useEffect","addEventListener","removeEventListener","className","onClick","push","src","alt","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","movie","setMovie","fetchData","a","get","request","data","results","Math","floor","random","length","style","backgroundPosition","backgroundSize","backgroundImage","backdrop_path","title","name","orginial_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","map","poster_path","id","HomeScreen","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","SignUpScreen","emailRef","useRef","passwordRef","ref","type","placeholder","e","preventDefault","signInWithEmailAndPassword","current","value","then","user","catch","err","alert","message","createUserWithEmailAndPassword","LoginScreen","signIn","setSignIn","background","userSlice","createSlice","initialState","reducers","login","state","action","payload","logout","actions","selectUser","ProfileScreen","useSelector","email","signOut","App","dispatch","useDispatch","onAuthStateChanged","userAuth","uid","path","exact","store","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19df93a4.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useHistory } from 'react-router';\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n    const history = useHistory();\n\n\n    const transitionNavBar = () => {\n        if(window.scrollY > 100) {\n            handleShow(true);\n        } else {\n            handleShow(false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", transitionNavBar);\n\n        return () => window.removeEventListener(\"scroll\", transitionNavBar)\n    },[])\n\n    return (\n        <div className={`fixed top-0 p-5 w-full h-30px z-10 transition duration-500 ease-in ${show && 'bg-black'}`}> \n            <div className=\"flex justify-between item\">\n                <img\n                    onClick={() => history.push(\"/\")}\n                    className=\"fixed top-2 left-0 w-20 object-contain pl-5 cursor-pointer\"\n                    src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n                    alt=\"\" \n                />\n\n                <img\n                    onClick={() => history.push(\"/profile\")}\n                    className=\"fixed top-2 right-5 w-7 h-7 cursor-pointer\"\n                    src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" \n                    alt=\"\" \n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Nav\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\"\n})\n\nexport default instance; ","const API_KEY = \"af55c932cb8b10d24954594569aedf6c\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;","import React, {useState, useEffect} from 'react';\nimport axios from \"../axios\";\nimport requests from \"../Requests\";\n\nfunction Banner() {\n\n    const [movie, setMovie] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(request.data.results[\n                Math.floor(Math.random() * request.data.results.length-1)\n            ]);\n            return request;\n        }\n        fetchData();\n    }, [])\n\n    const truncate = (string, n) => {\n        return string?.length > n ? string.substr(0, n-1) + \"...\" : string;\n    }\n\n    return (\n        <header className=\"relative object-contain text-white h-448px\" style={{ backgroundPosition: \"center center\", backgroundSize: \"cover\", backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`}}>\n            <div className=\"ml-30px pt-140px h-190px\">\n                <h1 className=\"text-5xl font-extrabold pb-1.5\">{movie?.title || movie?.name || movie?.orginial_name}</h1>\n                <div className=\"my-2\">\n                    <button \n                        className=\"cursor-pointer bg-gray-custom text-white outline-none border-none font-bold rounded-sm px-8 py-2 mr-4 hover:text-black hover:bg-gray-100 transition-all duration-200 ease-in\"\n                    >\n                            Play\n                    </button>\n                    <button className=\"cursor-pointer bg-gray-custom text-white outline-none border-none font-bold rounded-sm px-8 py-2 mr-4 hover:text-black hover:bg-gray-100 transition-all duration-200 ease-in\">My List</button>\n                </div>\n                <h2 className=\"w-45r max-w-360px leading-5 pt-4 text-sm h-20\">{truncate(movie?.overview, 150)}</h2>\n            </div>\n\n\n            <div className=\"fade-bottom\" />\n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useState, useEffect } from 'react';\nimport axios from \"../axios\";\n\nfunction Row({title, fetchUrl, isLargeRow = false}) {\n    const [movies, setMovies] = useState([]);\n    const base_url = \"https://image.tmdb.org/t/p/original\";\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl])\n\n    return (\n        <div className=\"text-white ml-5\">\n            <h2 className=\"text-bold pl-5 text-xl\">{title}</h2>\n\n            <div className=\"flex overflow-y-hidden overflow-x-scroll pt-2 pb-5 pl-5 scrollbar-hide\">\n                {movies.map(movie => \n                    ((isLargeRow && movie.poster_path) || \n                    (!isLargeRow && movie.backdrop_path)) && (\n                    <img \n                        key={movie.id}\n                        className={` rounded-md max-h-100px object-contain mr-1.5 w-full transition duration-450 ease-in transform hover:scale-105 cursor-pointer ${isLargeRow && \"isLargeRow mr-2.5 hover:scale-110\"}`}\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \n                        alt={movie.name} \n                    />\n                ))}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Row\n","import React from 'react';\n\nimport Nav from '../components/Nav';\nimport Banner from '../components/Banner';\nimport Row from '../components/Row';\nimport requests from '../Requests';\n\nfunction HomeScreen() {\n    return (\n        <div>\n            <Nav />\n\n            <Banner />\n\n            {/* Rows */}\n            <Row \n                title=\"NETFLIX ORIGINALS\"\n                fetchUrl={requests.fetchNetflixOriginals}\n                isLargeRow\n            />\n            <Row \n                title=\"Trending Now\"\n                fetchUrl={requests.fetchTrending}\n            />\n            <Row \n                title=\"Top Rated\"\n                fetchUrl={requests.fetchTopRated}\n            />\n            <Row \n                title=\"Action Movies\"\n                fetchUrl={requests.fetchActionMovies}\n            />\n            <Row \n                title=\"Comedy Movies\"\n                fetchUrl={requests.fetchComedyMovies}\n            />\n            <Row \n                title=\"Horror Movies\"\n                fetchUrl={requests.fetchHorrorMovies}\n            />\n            <Row \n                title=\"Romance Movies\"\n                fetchUrl={requests.fetchRomanceMovies}\n            />\n            <Row \n                title=\"Documentaries\"\n                fetchUrl={requests.fetchDocumentaries}\n            />\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAsE7pkWOf1QT5NH1sCe_kpO38IlXtrpAY\",\n    authDomain: \"netflix-clone-c2b59.firebaseapp.com\",\n    projectId: \"netflix-clone-c2b59\",\n    storageBucket: \"netflix-clone-c2b59.appspot.com\",\n    messagingSenderId: \"793215652279\",\n    appId: \"1:793215652279:web:0efe8ba328577aa0d05832\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { auth, db };\nexport default firebase;","import React, { useRef } from 'react'\nimport { auth } from \"../firebase\";\n\nfunction SignUpScreen() {\n    const emailRef = useRef(null);\n    const passwordRef = useRef(null);\n\n    const register = (e) => {\n        e.preventDefault();\n\n        auth.createUserWithEmailAndPassword(\n            emailRef.current.value,\n            passwordRef.current.value\n        )\n        .then((user) => {\n            // success\n        })\n        .catch((err) => {\n            alert(err.message)\n        })\n    }\n\n    const signIn = (e) => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(\n            emailRef.current.value,\n            passwordRef.current.value\n        )\n        .then((user) => {\n            // success\n        })\n        .catch((err) => {\n            alert(err.message)\n        })\n    }\n    return (\n        <div className=\"max-w-sm p-16 mx-auto bg-black bg-opacity-80\">\n            <form className=\"grid flex-col\">\n                <h1 className=\"mb-3\">Sign Up</h1>\n                <input ref={emailRef} className=\"mb-2 outline-none h-10 w-full rounded-md text-black\" type=\"Email\" placeholder=\"Email\" />\n                <input ref={passwordRef} className=\"mb-2 outline-none h-10 w-full rounded-md text-black\"  type=\"password\" placeholder=\"Password\" />\n                <button \n                    className=\"mt-2 px-2 py-3 bg-red-500 text-white rounded-sm\" \n                    type=\"submit\"\n                    onClick={signIn}\n                >\n                    Sign In\n                </button>\n\n                <h4 className=\"text-left mt-4\">\n                    <span className=\"text-gray-300\">New to Netflix?</span> \n                    <span className=\"cursor-pointer hover:underline\" onClick={register}> Sign Up now.</span> \n                </h4>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUpScreen\n","import React, { useState } from 'react';\nimport SignUpScreen from '../components/SignUpScreen';\n\nfunction LoginScreen() {\n    const [signIn, setSignIn] = useState(false);\n\n    return (\n        <div className=\"relative h-full\" style={{background: \"url('https://assets.nflxext.com/ffe/siteui/vlv3/757ab38f-5d08-40bc-b3eb-eaba63ed8203/93c34f94-56c8-40a7-8b2e-b4aac6427977/GB-en-20210125-popsignuptwoweeks-perspective_alpha_website_medium.jpg'), center no-repeat\", backgroundSize: \"cover\" }}> \n            <div className=\"\"> {/* loginscreen background */}\n                <img\n                    className=\"fixed left-0 w-40 object-contain pl-5\"\n                    src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n                    alt=\"\" \n                />\n                <button \n                    className=\"fixed right-5 top-5 bg-red-500 text-white text-base font-semibold px-5 py-2 rounded-sm border-none cursor-pointer\"\n                    onClick={() => setSignIn(true)}\n                >\n                    Sign In\n                </button>\n\n                <div className=\"loginScreenGradient\" />\n\n                <div className=\"z-10 p-5 text-white absolute top-30p mx-auto w-full text-center\">\n                    {signIn ? (\n                        <SignUpScreen />\n                    ) : (\n                        <>\n                            <h1 className=\"text-4xl mb-5\">Unlimited films, TV Programmes, and More.</h1>\n                            <h2 className=\"text-2xl mb-7\">Watch Anywhere. Cancel at any time</h2>\n                            <h3 className=\"text-base\">Ready to watch? Enter your email to create or restart your membership</h3>\n\n                            <div className=\"outline-none mt-1\">\n                                <form>\n                                    <input\n                                        className=\"p-4 outline-none focus:outline-none h-7 w-1/3 max-w-xl border-none text-black\" \n                                        type=\"email\" \n                                        placeholder=\"Email Address\" \n                                    />\n                                    <button \n                                        className=\"py-1 px-4 outline-none focus:outline-none border-none bg-red-500 text-base text-white\"\n                                        onClick={() => setSignIn(true)}\n                                    >\n                                        GET STARTED\n                                    </button>\n                                </form>\n                            </div>\n                        </>\n                    )}\n                    \n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default LoginScreen\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n \n  reducers: {\n    // actions\n    login: (state, action) => {\n      state.user = action.payload\n    },\n    logout: (state) => {\n      state.user = null\n    }\n  },\n\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = state => state.user.user;\n\nexport default userSlice.reducer;\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Nav from '../components/Nav'\nimport { selectUser } from '../features/userSlice'\nimport { auth } from '../firebase';\n\nfunction ProfileScreen() {\n    const user = useSelector(selectUser);\n    return (\n        <div className=\"h-screen text-white w-full\">\n            <Nav />\n            <div className=\"flex flex-col mx-auto max-w-3xl w-1/2 pt-8p\">\n                <h1 className=\"text-6xl text-normal border-b-2 border-gray-600 border-opacity-50 mb-5\">\n                    Edit Profile\n                </h1>\n\n                <div className=\"flex\">\n                    <img\n                        className=\"h-25\"\n                        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" \n                        alt=\"\" \n                    />\n                    <div className=\"text-white ml-6 flex-1\">\n                        <h2 className=\"bg-gray-600 p-4 pl-5 text-sm rounded-sm\">\n                            {user.email}\n                        </h2>\n                        <div className=\"mt-3\">\n                            <h3 className=\"text-1xl text-normal border-b-2 border-gray-600 border-opacity-50 mb-2\">Plans</h3>\n                            <p className=\"\">\n                                \n\n                            </p>\n                            <button \n                                className=\"w-full mt-2 px-5 py-3 bg-red-500 text-white text-base rounded-sm\"\n                                onClick={() => auth.signOut()}\n                            >\n                                Sign Out\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileScreen\n","import React, { useEffect} from \"react\";\n\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./features/userSlice\";\nimport { useHistory } from 'react-router';\n\nfunction App() {\n\tconst user = useSelector(selectUser)\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tconst unsubscribe = auth.onAuthStateChanged(userAuth => {\n\t\t\tif (userAuth) {\n\t\t\t\tdispatch(login({\n\t\t\t\t\tuid: userAuth.uid,\n\t\t\t\t\temail: userAuth.email\n\t\t\t\t}))\n\t\t\t} else {\n\t\t\t\tdispatch(logout());\n\t\t\t\t\n\t\t\t}\n\t\t})\n\t\treturn unsubscribe;\n\t}, [dispatch])\n\n  \treturn (\n\t\t<div className=\"app bg-black-custom\">\n\t\t\t<Router>\n\t\t\t\t{!user ? (\n\t\t\t\t\t<LoginScreen />\n\t\t\t\t) : (\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t\t\t<ProfileScreen />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t\t<HomeScreen />\n\t\t\t\t\t\t</Route>\n\t\t\t\t\t</Switch>\n\n\t\t\t\t)}\n\n\t\t</Router>\n\t\t</div>\n  \t);\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}